<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sq.users.core.mapper.SysRoleMapper">
    <resultMap id="BaseResultMap" type="cn.sq.users.core.po.SysRole">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="BIT"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="create_user_id" property="createUserId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="last_update_user_id" property="lastUpdateUserId" jdbcType="INTEGER"/>
        <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id ="Base_Column_List">
        id,`name`,state,description,version,create_user_id,create_time,last_update_user_id,last_update_time
    </sql>

    <update id="updateByPrimaryKeyAndVersionSelective" parameterType="sysRole">
        update sys_role
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=BIT},
            </if>
            <if test="lastUpdateTime != null">
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            version = #{version,jdbcType=INTEGER} + 1
        </set>
        where id = #{id,jdbcType=INTEGER} and version = #{version,jdbcType=INTEGER}
    </update>

    <select id="selectPageList" parameterType="sysRole" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        <where>
            <if test="name!=null and name != ''">
                AND `name` like concat('%',#{name,jdbcType=VARCHAR},'%')
            </if>
            <if test="state!=null and state != ''">
                AND state = #{state,jdbcType=BIT}
            </if>
        </where>
    </select>

    <!--用户组拥有角色-->
    <select id="selectUserGroupHaveRoles" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT t1.id, t1.name
        FROM sys_role t1
        WHERE EXISTS(
                  SELECT t2.group_id, t2.role_id
                  FROM sys_group_role_pk t2
                  WHERE t1.id = t2.role_id
                    AND t2.group_id = #{userGroupId,jdbcType=INTEGER}
                      )
          AND state = 1
    </select>

    <!--查询用户组未拥有的角色-->
    <select id="selectUserGroupHaveNoRoles" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT t1.id, t1.name
        FROM sys_role t1
        WHERE NOT EXISTS(
                      SELECT t2.group_id, t2.role_id
                      FROM sys_group_role_pk t2
                      WHERE t1.id = t2.role_id
                        AND t2.group_id = #{userGroupId,jdbcType=INTEGER}
                )
          AND state = 1
          and t1.name like concat('%', #{name,jdbcType=VARCHAR}, '%')
    </select>

    <!--查询用户角色+所在用户组角色之和-->
    <select id="selectUserHaveRoles" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT t1.id, t1.name
        FROM sys_role t1
                 left join sys_user_role_pk t2 ON t1.id = t2.role_id
        WHERE t1.state = 1
          and t2.user_id = #{userId,jdbcType=INTEGER}
        UNION
        SELECT t1.id, t1.name
        FROM sys_role t1
                 LEFT JOIN sys_group_role_pk t2 ON t1.id = t2.role_id
                 LEFT JOIN sys_user_group_pk t3 ON t2.group_id = t3.group_id
        WHERE t1.state = 1
          AND t3.user_id = #{userId,jdbcType=INTEGER}
    </select>

    <!--查询用户未拥有的角色-->
    <select id="selectUserHaveNoRoles" resultMap="BaseResultMap">
        SELECT t1.id, t1.name
        FROM sys_role t1
                 left join sys_user_role_pk t2 ON t1.id = t2.role_id
        WHERE t1.state = 1
          and t2.user_id != #{userId,jdbcType=INTEGER}
          and t2.user_id is null
          and t1.name like concat('%', #{name,jdbcType=VARCHAR}, '%')
        UNION
        SELECT t1.id, t1.name
        FROM sys_role t1
                 LEFT JOIN sys_group_role_pk t2 ON t1.id = t2.role_id
                 LEFT JOIN sys_user_group_pk t3 ON t2.group_id = t3.group_id
        WHERE t1.state = 1
          and t3.user_id = #{userId,jdbcType=INTEGER}
          and t3.user_id is null
          and t1.name like concat('%', #{name,jdbcType=VARCHAR}, '%')
    </select>
</mapper>